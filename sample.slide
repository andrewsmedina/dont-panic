Don't Panic

Andrews Medina
globo.com
@andrewsmedina

* Who Am I

- globo.com desde 2008
- @andrewsmedina
- github.com/andrewsmedina

* tsuru.io

Torna deploys mais simples, rápidos e divertidos (escrito em Go).

* Go proverbs


* Go proverbs

https://go-proverbs.github.io/

* Don't panic

* panic

É uma função `built-in`, que cria um erro de execução (`runtime error`) e para
a execução da goroutine em que o `panic` foi executado.

* panic

.code panic1.go

* panic

.play panic2.go

* panic

.play panic3.go

* panic

.play panic4.go

* panic

.play panic6.go

* panic

.play panic7.go

* panic

.code http.go

* recover

Permite um programa a gerenciar o comportamento de uma goroutina em "pânico"

* recover

.play panic9.go

* recover

.play panic5.go

* panic

.play panic8.go

* Não use panic

* #comofaz

* erros

.code err1.go

* erros

.play err2.go

* erros

.play err3.go

* erros

.code err4.go

- NUNCA verifique o conteúdo de err.Error()

* erros

.code err5.go

- fácil de verificar, mas cria dependência entre pacotes

* erros

.code err6.go

- adiciona informacão customizada ao erro, mas cria dependência entre pacotes

* erros

.code err7.go

- verifica erro pelo comportamento, não pelo tipo =)

* Resumindo

- Não use panic
- Use panic quando quiser parar a execução da goroutine
- Na dúvida não use panic
- Use erros :)
- Trate erros pelo comportamento, não pelo tipo ou conteúdo
